services:
  db:
    image: postgres:16
    container_name: db
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - education_net
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    command:
      - postgres
      - -c
      - wal_level=replica
      - -c
      - max_wal_senders=2
      - -c
      - max_replication_slots=2

  db_repl:
    image: postgres:16
    container_name: db_repl
    env_file:
      - .env
    environment:
      - PGPASSWORD=root
    user: postgres
    volumes:
      - db_repl:/var/lib/postgresql/data
    networks:
      - education_net
    depends_on:
      - db
    entrypoint:
      - /bin/bash
      - -c
      - |
        # Создание резервной копии
        pg_basebackup -h db -D /var/lib/postgresql/data -U root -Fp -Xs -P
        
        # Создание файла конфигурации для репликации
        echo "primary_conninfo = 'host=db port=5432 user=root password=root'" > /var/lib/postgresql/data/postgresql.conf
        echo "standby_mode = 'on'" > /var/lib/postgresql/data/standby.signal
        
        # Устанавливаем права
        chmod 0750 /var/lib/postgresql/data
        
        # Запуск PostgreSQL
        exec postgres -c "hot_standby=on"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - education_net
    volumes:
      - redis:/var/lib/redis/data

  edu:
    container_name: edu
    build: .
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_REPLICATION: db_repl
      REDIS_ADDRESS: redis:6379
      MIGRATION_URL: file://migration
    ports:
      - "1213:1213"
      - "8080:8080"
    depends_on:
      - db
      - redis
    networks:
      - education_net
    command: [ "./main" ]

volumes:
  db_data:
  db_repl:
  redis:

networks:
  education_net:
    name: education_net
    driver: bridge
