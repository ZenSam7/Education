∅ Чтобы создать новый postgresql:
$ docker run --name postgres16 -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=root -d postgres:16

∅ Подключение к бд:
$ docker exec -it postgres16 psql -U root habr2
[exec] Выполнить команду внутри контейнера
[-it postgres16] Имя контейнера
[psql -U root habr2] Сама команда

∅ Создать бд
$ docker exec -it postgres16 createdb --username=root --owner=root habr2
∅ Удалить бд
$ docker exec -it postgres16 dropdb habr2

∅ Отключиться от бд:
$ \q


МИГРАЦИИ (используется библиотека golang-migrate)
∅ Создать миграцию:
$ migrate create -ext sql -dir migration -seq init_schema
[-ext sql] Создать файлы с расширением .sql
[-dir migration] Куда сохранить миграции
[-seq] Создать последовательный номер миграции
[init_schema] Имя миграции
∅ Запустить миграцию:
$ migrate -path /mnt/c/Users/samki/GoProjects/Education/db/migration/ -database "postgresql://root:root@localhost:5432/habr2?sslmode=disable" up
[migrate] Программа для миграций на Golang ("Golang Migration")
[-path /mnt/c/Users/samki/GoProjects/Education/db/migration/] Путь к папке миграций
[-database "postgresql://root:root@localhost:5432/habr2?sslmode=disable"] Полный URL путь к нашей бд
[[?sslmode=disable] Означает что мы не используем ssl протокол (т.к. docker по умолчанию его не поддерживает)]
[up] Поднимаем миграции (т.е. идём от первой миграции до текущей верси бд)


:::ВСЯКИЕ КОМАНДЫ DOCKER:::
$ docker run -d --rm --name <имя_контейнера> <имя_образа>
∅ [run] Создать новый контейнер и запустить его
∅ /[start] Чтобы не создать новый, а запустить существующий
∅ [-d] Запустить контейнер на заднем фоне
∅ [--rm] Запустить контейнер с автоудалением при остановке
∅ [--name]

∅ Чтобы запустить существующий контейнер:
$ docker start <container_id>
∅ Чтобы остановить контейнер:
$ docker stop postgres16
∅ Увидеть работающий контейнеры:
$ docker ps

∅ Просмотреть все открытые порты и ip
$ netstat -tulpen